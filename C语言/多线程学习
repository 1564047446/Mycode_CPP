	**主要线程的三种类型**
		1.内核级线程   被用户进程调度
		2.用户级线程   被内核调度
		3.混合式线程
	
	
	**内核级线程**
	头文件	#include <pthread.h>
	创建线程函数  int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine) (void *), void *arg)
	第一个参数 指向linux线程标识符的指针
	attr是指向定义新线程特性的指针可以用函数来设置这个结构不同域的值，但一般我们直接带入NULL， 使用默认运行
	start_routine 是指向一个函数的指针， 这个被创建的新线程只执行这一个函数， 参数是一个泛型指针， 返回值也是一个泛型指针
	arg 就是用来传递给start_routine的参数
	
	
	如果我们想从原来线程获得新线程的返回值， 需要调用 <int pthread_join(pthread_t thread, void **retval);>
	第一个参数是我们从create中获得的线程标识符，这个函数会等待线程表示符等于thread的线程运行完，并将他的返回值存入最后一个参数 **retval
	
	线程的销毁
	<int pthread_cancel(pthread_t thread)>
	<void pthread_exit(void *retval)>
